#######Call QIIME#######
MacQiime

#For a list of program configurations, will throw errors if something not set up correctly
print_qiime_config.py

#Navigate to working directoty
cd /Users/juliastevens...

#Using QIIME v1.9.1 multiple join paired ends
#fastq_directory is what directly downloads from BaseSpace
multiple_join_paired_ends.py -i fastq_directory/ -o merged_fastq/


#Convert .fastq files to .fna files

nano convert_fastq.sh

#! /bin/bash
#Shell script to automate fastq to fasta conversion

for file in $(<sample_names.txt)
do
    convert_fastaqual_fastq.py -f merged_fastq_directory/${file}.fastq -c fastq_to_fastaqual -F -o converted_merged_reads

done

#Control+X, Y, enter will exit from nano while saving your modified program

#exit nano and run program
chmod +x convert_fastq.sh
./convert_fastq.sh

add_qiime_labels.py -i converted_merged_reads/ -m "your_map_file".txt -c InputFileName -n 1 -o combined_seqs.fna

count_seqs.py -i combined_seqs.fna

#For a summary of the sequences use Mothur commands within QIIME
#Call mothur
mothur
#Summary stats of sequences
summary.seqs(fasta=combined_seqs.fna)

#Screen Sequences outside of the expected length of product ~ expected range for EMP 16S primers
screen.seqs(fasta=current, minlength=285, maxlength=295, maxambig=0, maxhomop=8)
quit()

#Chimera searching using the ucsearch closed reference algorithm against greengenes database
vsearch --uchime_ref combined_seqs.good.fna --db 97_otus.fasta --nonchimeras combined_seqs.good.nonchimera_ref.fna

pick_otus.py -i combined_seqs.good.fna -m uclust -o uclust_picked_otus/ -s 0.97

mkdir uclust_rep_seqs/

#Pick representative sequences [Make sure to check the name of you input file so that it matches the script below]
pick_rep_set.py -i uclust_picked_otus/combined_seqs_otus.txt -f combined_seqs.good.fna -o uclust_rep_seqs/uclust_rep_seqs.fasta -l uclust_rep_seqs/uclust_rep_seqs.log

count_seqs.py -i uclust_rep_seqs/uclust_rep_seqs.fasta

align_seqs.py -i uclust_rep_seqs/uclust_rep_seqs.fasta -o pynast_aligned/ -e 100

filter_alignment.py -i seqs_rep_set_aligned.fasta -o filtered_alignment/ -r

assign_taxonomy.py -i filtered_alignment/uclust_rep_seqs_aligned_pfiltered.fasta -m rdp -c 0.8

make_otu_table.py -i uclust_picked_otus/combined_seqs.good.nonchimera_ref_otus.txt -o bacteria_otu_table.biom -e pynast_aligned_seqs/uclust_rep_seqs_failures.fasta -t rdp_assigned_taxonomy/uclust_rep_seqs_aligned_pfiltered_tax_assignments.txt 

filter_otus_from_otu_table.py -i bacteria_otu_table.biom -o filtered_otu_table1.biom -n 3

filter_taxa_from_otu_table.py -i filtered_otu_table.biom -o filtered_otu_table_nounclassified.biom -n None,Unclassified


##Remove OTUs that are in negative control
split_otu_table.py -i filtered_otu_table.biom -m "filepath to map".txt -f Run_Number -o split_otu_tables
filter_samples_from_otu_table.py -i split_otu_tables/filtered_otu_table1__Run_Number_1__.biom -o otu_table_run1_blank.biom -m experiment_map.txt -s "Treatment:NA"
filter_otus_from_otu_table.py -i otu_table_run1_blank.biom -o filtered_otu_table_run1_blank.biom -n 1
biom convert -i filtered_otu_table_run1_blank.biom -o otus_to_remove1.txt --to-tsv --table-type="OTU table"
filter_otus_from_otu_table.py -i split_otu_tables/filtered_otu_table1__Run_Number_1__.biom -o otu_table1_minus_cont.biom -e otus_to_remove1.txt 
filter_samples_from_otu_table.py -i otu_table1_minus_cont.biom -o final_otu1.biom -n 1

##Repeat above steps for each of the 3 bacterial runs

merge_otu_tables.py -i final_otu1.biom,final_otu2.biom,final_otu3.biom -o filtered_otu_table_nounclassified_nocontam.biom

biom summarize_table -i final_filtered_otu_table.biom -o summary_filtered_otu_table.txt

core_diversity_analyses.py -i filtered_otu_table_nounclassified_nocontam.biom -m experiment_map.txt -o core_diversity_analyses -e 2580 --nonphylogenetic_diversity -c Time,Region,Treatment -a -O 12

biom convert -i filtered_otu_table_nounclassified_nocontam.biom -o filtered_otu_table_nounclassified_nocontam.txt --to-tsv --table-type="OTU table" --header-key taxonomy --output-metadata-id "taxonomy"
